---
  ### ---------------------------------------------------------------------------
  ### APSTRA API AUTOMATION
  ### ---------------------------------------------------------------------------
  - hosts: localhost
    gather_facts: False
    connection: local
    roles:
      - { role: apstra_auth }
      - { role: get_bp_id }
        #      - { role: check_ds }
        #      - { role: check_diff }
    tasks:
    - name: Initialize Variables
      ansible.builtin.set_fact: 
        leaf_ids: ""

    - name:
      debug:
        var: sz

    - name: Get Device ID
      ansible.builtin.include_role:
        name: get_node_system
      vars:
        node_type: system

    - name: set system id
      ansible.builtin.set_fact:
        leaf_ids: "{{ node_system.json }}"
      when: leaf_ids == ""

    - name:
      debug:
        var: leaf_ids

    - name: Get id of the system with specific label
      ansible.builtin.set_fact:
        leaf_id: "{{ leaf_ids.nodes | dict2items }}"

    - name:
      debug:
        var: leaf_id

    - name: Initialize empty list for ids
      set_fact:
        specific_ids: []

          #    - name: Add ids to specific_ids list
          #set_fact:
          #specific_ids: "{{ specific_ids + [item.value.id] }}"
          #loop: "{{ leaf_id }}"
          #when: item.value.label in leaf_name

          #    - name: Display specific_ids
          #debug:
          #var: specific_ids


    - name: Initialize Variables
      ansible.builtin.set_fact:
        leaf_ids: ""

    - name: Get Device ID
      ansible.builtin.include_role:
        name: get_node_system
      vars:
        node_type: system

    - name: set system id
      ansible.builtin.set_fact:
        leaf_ids: "{{ node_system.json  | cleanup_leaf_ids }}"
      when: leaf_ids == ""
    - name:
      debug:
        var: leaf_ids

    - name: show vns
      ansible.builtin.debug:
        msg: "{{ sz }}"

    - name: Include example_role
      include_role:
        name: get_leaf_ids

    - name: "Retrieve Security ID if not set"
      block:
      - name: "Get Security ID"
        ansible.builtin.uri:
          url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/nodes?node_type=security_zone"
          method: GET
          return_content: yes
          status_code: 200
          headers:
            content-type: "application/json"
            AUTHTOKEN: "{{ login.json.token }}"
          validate_certs: false
          force_basic_auth: yes
        register: security

    - name: set security zone ID
      ansible.builtin.set_fact:
        sz_id: "{{ security.json | cleanup_security_zone(sz.name) }}"

    - name: "Create connectivity template"
      uri:
        url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/virtual-networks-batch?async=full"
        method: POST
        status_code: 202
        headers:
          content-type: "application/json"
          AUTHTOKEN: "{{ login.json.token }}"
        validate_certs: false
        force_basic_auth: yes
        body: "{{ lookup('ansible.builtin.template','templates/create_vn_kutay.j2') }}"
        body_format: json
      ignore_errors: yes
      with_items: "{{ sz.vns }}" 

        #    - name: Add VN to CT 
        #      ansible.builtin.include_role:
        #        name: add_vn_to_ct

    - name: Add VN to CT
      ansible.builtin.include_role:
        name: add_vn_to_ct_multiple

    - name: Add VN to FWCT
      ansible.builtin.include_role:
        name: add_vn_to_fw_ct_multiple

        #    - name: "Commit Changes"
        #include_role:
        #name: commit_changes
